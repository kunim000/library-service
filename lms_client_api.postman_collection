{
	"info": {
		"_postman_id": "e5b5f12d-aaf2-4d55-a27b-d834bd8d16b2",
		"name": "library_management_system_client",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "client",
			"item": [
				{
					"name": "auth",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sig')).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "pass",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8086/lms/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "pass",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "lms-key",
										"value": "352019a6-1c73-11eb-adc1-0242ac120002",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://localhost:8086/lms/admin/users/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Single User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "lms-key",
										"value": "352019a6-1c73-11eb-adc1-0242ac120002",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://localhost:8086/lms/admin/users/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"users",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Authenticated User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "lms-key",
										"type": "text",
										"value": "352019a6-1c73-11eb-adc1-0242ac120002",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://localhost:8086/lms/users/me",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"let responseData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"newUserId\", responseData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "lms-key",
										"value": "352019a6-1c73-11eb-adc1-0242ac120002",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"mock-lms\",\r\n    \"email\": \"mock@lms.com\",\r\n    \"username\": \"mock\",\r\n    \"password\": \"pass\",\r\n    \"accountNonExpired\": true,\r\n    \"accountNonLocked\": true,\r\n    \"credentialsNonExpired\": true,\r\n    \"enabled\": true,\r\n    \"userRoles\": [\r\n        \"USER\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/admin/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "lms-key",
										"value": "352019a6-1c73-11eb-adc1-0242ac120002",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"user-updated-lms\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/admin/users/{{newUserId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"users",
										"{{newUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/users/{{newUserId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"users",
										"{{newUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8086/lms/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "book",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "pass",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Books",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/books",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"books"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Single Book",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/books/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"books",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Book",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"let responseData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"newBookId\", responseData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Java\",\r\n    \"category\": {\r\n        \"id\": 1,\r\n        \"name\": \"TECHNOLOGY\"\r\n    },\r\n    \"author\": \"DT\",\r\n    \"publication\": \"DTP\",\r\n    \"pages\": 100,\r\n    \"publicationYear\": null,\r\n    \"summary\": \"Summary for Java\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/admin/books/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"books",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Book",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n       \"summary\": \"Summary for Java - Updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/admin/books/{{newBookId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"books",
										"{{newBookId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Book",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/books/{{newBookId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"books",
										"{{newBookId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/categories/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"categories",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Single Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/categories/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"categories",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"let responseData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"newCatId\", responseData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"CARS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/admin/categories/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"categories",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"CARS-UP\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/admin/categories/{{newCatId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"categories",
										"{{newCatId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/categories/{{newCatId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"categories",
										"{{newCatId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8086/lms/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "inventory",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "pass",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Inventory Count",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/inventory/books/2/count",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"inventory",
										"books",
										"2",
										"count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Inventory of Book",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/inventory/books/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"inventory",
										"books",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save New Book To Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"bookId\": 2,\r\n    \"bookReferenceId\": \"2b-2c-1\",\r\n    \"categoryId\": 2,\r\n    \"available\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/admin/inventory/books/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"inventory",
										"books",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete All Book Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/inventory/books/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"inventory",
										"books",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Book Reference Inventory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/inventory/books/2?bookReferenceId=2b-2c-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"inventory",
										"books",
										"2"
									],
									"query": [
										{
											"key": "bookReferenceId",
											"value": "2b-2c-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8086/lms/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "order",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "pass",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders For User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/orders/users/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"orders",
										"users",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order History For User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/orders/users/3/history",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"orders",
										"users",
										"3",
										"history"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders Overdue For Return Of User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/orders/users/1/overdue/return",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"orders",
										"users",
										"1",
										"overdue",
										"return"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders Overdue For Collection for User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/orders/users/1/overdue/collect",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"orders",
										"users",
										"1",
										"overdue",
										"collect"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Single Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/orders/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"orders",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders For Book",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/orders/books/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"orders",
										"books",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders Overdue For Return Of ALL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/orders/overdue/return",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"orders",
										"overdue",
										"return"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders Overdue For Collection for ALL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/orders/overdue/collect",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"orders",
										"overdue",
										"collect"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Book",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"let responseData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"newOrderId\", responseData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"userId\": 5,\r\n        \"bookId\": 2\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8086/lms/admin/orders/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"orders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Collect Book Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/orders/{{newOrderId}}/collect",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"orders",
										"{{newOrderId}}",
										"collect"
									]
								}
							},
							"response": []
						},
						{
							"name": "Return Book Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8086/lms/admin/orders/{{newOrderId}}/return",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"admin",
										"orders",
										"{{newOrderId}}",
										"return"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sid cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});\r",
											"\r",
											"pm.test(\"Response does not contain a sig cookie\", function() {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.false;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:8086/lms/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8086",
									"path": [
										"lms",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}